	local player = game.Players.LocalPlayer
	local char = player.Character
	local backpack = player.Backpack

	local function getf3x()
		for _, v in ipairs(backpack:GetChildren()) do
			if v:FindFirstChild("SyncAPI") then
				return v
			end
		end
		for _, v in ipairs(char:GetChildren()) do
			if v:FindFirstChild("SyncAPI") then
				return v
			end
		end

		return nil
	end

	local f3x = getf3x()
	if not f3x then
		warn("you dont have f3x skid")
	end
	local syncapi = f3x.SyncAPI
	local serverendpoint = syncapi.ServerEndpoint

	local function name(part, stringa)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringa
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function lock(part, boolean)
		local args = {
			[1] = "SetLocked",
			[2] = {
				[1] = part
			},
			[3] = boolean
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	-- main func

	local function createdecal(part, side)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal"
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end
	local function setdecal(part, asset, side)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal",
					["Texture"] = "rbxassetid://".. asset
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function color(part, color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = false
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

local function createdecal(part, side)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal"
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end
	local function setdecal(part, asset, side)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal",
					["Texture"] = "rbxassetid://".. asset
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function color(part, color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = false
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function addfire(part)
		local args = {
			[1] = "CreateDecorations",
			[2] = {
				[1] = {
					["Part"] = part,
					["DecorationType"] = "Fire"
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function syncfire(part, size, heat)
		local args = {
			[1] = "SyncDecorate",
			[2] = {
				[1] = {
					["Part"] = part,
					["DecorationType"] = "Fire",
					["Size"] = 30,
					["Heat"] = 35
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function addlight(part, brightness)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "PointLight"
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function synclight(part, brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "PointLight",
					["Brightness"] = brightness,
					["Color"] = Color3.new(1, 0, 0)
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function setcollision(part, booleana)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = booleana
				}
			}
		}
		serverendpoint:InvokeServer(unpack(args))
	end

	local function decalspam()
		local decalid = "96757457442198"
		for _, v in ipairs(workspace:GetDescendants()) do
			if v.Name == "Sky" then
				print("no")
			elseif v:IsA("BasePart") or v:IsA("UnionOperation") then
				spawn(function()
					createdecal(v, Enum.NormalId.Front)
					createdecal(v, Enum.NormalId.Back)
					createdecal(v, Enum.NormalId.Left)
					createdecal(v, Enum.NormalId.Right)
					createdecal(v, Enum.NormalId.Bottom)
					createdecal(v, Enum.NormalId.Top)

					setdecal(v, decalid, Enum.NormalId.Front)
					setdecal(v, decalid, Enum.NormalId.Back)
					setdecal(v, decalid, Enum.NormalId.Left)
					setdecal(v, decalid, Enum.NormalId.Right)
					setdecal(v, decalid, Enum.NormalId.Bottom)
					setdecal(v, decalid, Enum.NormalId.Top)
				end)
			end
		end
	end

	local function lightall()
		for _, v in ipairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") or v:IsA("UnionOperation") then
				spawn(function()
					addlight(v)
					synclight(v, 15)
				end)
			end
		end
	end

	local function colorall()
		for _, v in ipairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") or v:IsA("UnionOperation") then
				spawn(function()
					color(v, Color3.new(0.0666667, 0.0666667, 0.0666667))
				end)
			end
		end
	end

	local function sky666()
		spawn(function()
			local position = char.Head.Position
			local part = serverendpoint:InvokeServer("CreatePart", "Normal", CFrame.new(position + Vector3.new(0, 2, 0)), workspace)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			serverendpoint:InvokeServer(unpack(args))
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://8006679977"
					}
				}
			}
			serverendpoint:InvokeServer(unpack(args))
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = Vector3.new(90, 90, 90)
					}
				}
			}
			serverendpoint:InvokeServer(unpack(args))
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] =	"rbxassetid://15849970412"
					}
				}
			}
			serverendpoint:InvokeServer(unpack(args))

			name(part, "Sky")
			lock(part, true)
			setcollision(part, false)
		end)
	end

	local function fireall()
		for _, v in ipairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") or v:IsA("UnionOperation") then
				spawn(function()
					addfire(v)
					syncfire(v)
				end)
			end
		end
	end

	local function sixsixsix()
		fireall()
		sky666()
		decalspam()
		colorall()
		lightall()
	end

	sixsixsix()
end)
